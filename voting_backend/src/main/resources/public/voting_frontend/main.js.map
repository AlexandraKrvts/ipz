{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/answer/answer-entity.model.ts","webpack:///./src/app/answer/answer.component.css","webpack:///./src/app/answer/answer.component.html","webpack:///./src/app/answer/answer.component.ts","webpack:///./src/app/answer/answer.model.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/question/question.component.css","webpack:///./src/app/question/question.component.html","webpack:///./src/app/question/question.component.ts","webpack:///./src/app/question/question.model.ts","webpack:///./src/app/services/question.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class AnswerEntity {\n  questionId: bigint;\n  userId: number;\n  answer: boolean;\n\n  constructor(questionId:bigint, answer:boolean, userId: number){\n    this.questionId=questionId;\n    this.answer=answer;\n    this.userId=userId;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fuc3dlci9hbnN3ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<button (click)=\\\"answerQuestion(value)\\\">{{ name }}</button>\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-answer',\n  templateUrl: './answer.component.html',\n  styleUrls: ['./answer.component.css']\n})\nexport class AnswerComponent {\n\n  @Output()\n  private select = new EventEmitter<string>();\n\n  @Input()\n  private name: string;\n\n  @Input()\n  private value: string;\n\n  constructor() { }\n\n  public answerQuestion(value){\n    this.select.emit(value);\n  }\n\n\n}\n","export class Answer {\n  name: string;\n  value: string;\n  constructor(name?:string, value?:string){\n    this.name=name;\n    this.value=value;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}.\\n  </h1>\\n</div>\\n<div style=\\\"text-align:center\\\">\\n  <h3>\\n    <app-question> </app-question>\\n    <toaster-container></toaster-container>\\n  </h3>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Voting Application';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { QuestionComponent } from './question/question.component';\nimport { AnswerComponent } from './answer/answer.component';\nimport {ToasterModule, ToasterService} from 'angular2-toaster';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionComponent,\n    AnswerComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToasterModule.forRoot(),\n  ],\n  providers: [ToasterService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1ZXN0aW9uL3F1ZXN0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\n  <p>{{question.title}}</p>\\n  <div *ngFor=\\\"let a of answers\\\">\\n    <app-answer\\n      name=\\\"{{a.name}}\\\"\\n      value=\\\"{{a.value}}\\\"\\n      (select)=\\\"answer($event)\\\"\\n    ></app-answer>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {QuestionService} from \"../services/question.service\";\nimport { Question } from \"./question.model\";\nimport {Answer} from \"../answer/answer.model\";\nimport {UserService} from \"../services/user.service\";\nimport {ToasterService} from \"angular2-toaster\";\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n\n  private question : Question;\n  private interval : number;\n  private answersCached : Array<Answer>;\n  private answers : Array<Answer>;\n\n  constructor(\n    private questionService: QuestionService,\n    private userService: UserService,\n    private toaster: ToasterService) {\n    this.answersCached = [\n      new Answer(\"Yes\", \"true\"),\n      new Answer(\"No\", \"false\")\n    ];\n  }\n\n  ngOnInit() {\n    this.interval = setInterval(() => {\n      this.questionService.getLastQuestion();\n    }, 1000);\n\n    this.questionService.question.subscribe(question => {\n      if( question == null ) question = new Question();\n      this.question = question;\n      if( typeof this.question.id !== 'undefined' ) {\n        this.answers = this.answersCached;\n      }\n      console.log(this.question.id);\n    });\n\n    this.userService.createUserId();\n  }\n\n  public answer(value: boolean){\n    console.log(value);\n    this.questionService.answerQuestion(this.question, value).then(res => {\n      console.log(res);\n      this.toaster.pop('success', \"Thanks for answer.\")\n    }).catch(err => {\n      console.log(err);\n\n      this.toaster.pop('error', err.error);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n}\n","export class Question {\n  id: bigint;\n  title: string;\n\n  constructor(id?: bigint, title?: string) {\n    this.id = id;\n    this.title = title;\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\nimport {Question} from \"../question/question.model\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {UserService} from \"./user.service\";\nimport {AnswerEntity} from \"../answer/answer-entity.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  question = new BehaviorSubject<any>(new Question());\n\n  constructor(private http: HttpClient, private userService: UserService) { }\n\n  public getLastQuestion(): void {\n    this.http.get('/question/last').subscribe(question => this.question.next(question));\n  }\n\n  public answerQuestion(question : Question, answer: boolean): Promise<any> {\n    let answerEntity = new AnswerEntity(question.id, answer, this.userService.getUserId());\n    return this.http.post('/question/answer', answerEntity).toPromise();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor() { }\n\n  public createUserId(): void {\n    if( localStorage.getItem('userId') == null ) {\n      let id = Math.floor(100000000 + Math.random() * 900000000).toString();\n      localStorage.setItem('userId', id);\n    }\n  }\n\n  public getUserId(): number {\n    return parseInt(localStorage.getItem('userId'));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}